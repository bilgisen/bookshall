name: Publish Content

on:
  workflow_dispatch:
    inputs:
      book_id:
        description: 'Book ID'
        required: true
        type: string
      user_id:
        description: 'User ID'
        required: true
        type: string
      session_id:
        description: 'Session ID'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      BOOK_ID: ${{ github.event.inputs.book_id }}
      USER_ID: ${{ github.event.inputs.user_id }}
      SESSION_ID: ${{ github.event.inputs.session_id }}
      BASE_URL: https://bookshall.com
      API_URL: https://bookshall.com/api
      BOOKSHALL_API_KEY: ${{ secrets.BOOKSHALL_API_KEY }}

    steps:
      - name: Initial Debug - Print Environment
        run: |
          echo "🔄 Starting workflow execution"
          echo "📋 Workflow Inputs:"
          echo "  - Book ID: ${{ github.event.inputs.book_id }}"
          echo "  - User ID: ${{ github.event.inputs.user_id }}"
          echo "  - Session ID: ${{ github.event.inputs.session_id }}"
          echo ""
          echo "🔑 Checking environment variables:"
          echo "  - BASE_URL: $BASE_URL"
          echo "  - API_URL: $API_URL"
          echo "  - BOOKSHALL_API_KEY: ${BOOKSHALL_API_KEY:0:4}...${BOOKSHALL_API_KEY: -4} (${#BOOKSHALL_API_KEY} chars)"
          echo ""
          echo "📂 Current directory:"
          pwd
          ls -la

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Debug - Check repository content
        run: |
          echo "📂 Repository content:"
          ls -la
          echo ""
          echo "🔍 Git status:"
          git status
          echo ""
          echo "🌿 Current branch:"
          git branch --show-current

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Debug - Node.js and npm versions
        run: |
          echo "🟢 Node.js version: $(node -v)"
          echo "📦 npm version: $(npm -v)"
          echo "📦 pnpm version: $(pnpm -v)"

      - name: Install dependencies
        run: |
          echo "📦 Installing dependencies..."
          pnpm install --frozen-lockfile
          echo "✅ Dependencies installed"

      - name: Debug API key and environment
        run: |
          echo "🔑 Environment variables:"
          printenv | sort
          echo ""
          echo "🔍 Checking API key:"
          if [ -z "$BOOKSHALL_API_KEY" ]; then
            echo "❌ BOOKSHALL_API_KEY is empty"
            exit 1
          else
            echo "✅ BOOKSHALL_API_KEY is set (${#BOOKSHALL_API_KEY} characters)"
            echo "   First 4 chars: ${BOOKSHALL_API_KEY:0:4}..."
            echo "   Last 4 chars: ${BOOKSHALL_API_KEY: -4}"
          fi

      - name: Debug network connectivity
        run: |
          echo "🌐 Testing network connectivity:"
          echo " - Google DNS: $(ping -c 1 8.8.8.8 | grep 'bytes from' || echo '❌ Failed')"
          echo " - Google.com: $(ping -c 1 google.com | grep 'bytes from' || echo '❌ Failed')"
          echo " - API endpoint: $(curl -s -o /dev/null -w "%{http_code}" $API_URL/health || echo '❌ Failed')"

      - name: Fetch book content
        run: |
          echo "📥 Starting to fetch book content..."
          echo "🔍 Script location: $(ls -la ./scripts/fetch-book.sh)"
          echo "🔍 Script permissions: $(ls -l ./scripts/fetch-book.sh)"
          echo "📋 Environment for fetch-book.sh:"
          echo "  - BOOK_ID: $BOOK_ID"
          echo "  - BASE_URL: $BASE_URL"
          echo "  - API_URL: $API_URL"
          echo "  - BOOKSHALL_API_KEY: ${BOOKSHALL_API_KEY:0:4}...${BOOKSHALL_API_KEY: -4}"
          
          # Run with debug output
          set -x  # Enable debug output
          chmod +x ./scripts/fetch-book.sh
          ./scripts/fetch-book.sh
          set +x  # Disable debug output
        env:
          BOOK_ID: ${{ env.BOOK_ID }}
          BASE_URL: ${{ env.BASE_URL }}
          API_URL: ${{ env.API_URL }}
          BOOKSHALL_API_KEY: ${{ secrets.BOOKSHALL_API_KEY }}
          DEBUG: "true"  # Enable debug mode for the script

      - name: Debug - List generated files
        run: |
          echo "📂 Generated files:"
          find . -type f -not -path "*/node_modules/*" -not -path "*/.git/*" -ls
          echo ""

      - name: Final status
        if: always()
        run: |
          echo "🏁 Workflow completed with status: ${{ job.status }}"
          echo "📊 Job status: ${{ job.status }}"
          echo "🕒 Job started at: ${{ job.steps[*].startedAt }}"
          echo "⏱️  Job completed at: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"